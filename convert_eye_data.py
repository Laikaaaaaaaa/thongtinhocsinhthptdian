#!/usr/bin/env python3
"""
Script ƒë·ªÉ chuy·ªÉn ƒë·ªïi to√†n b·ªô d·ªØ li·ªáu eye_diseases sang format m·ªõi
"""

import sqlite3
import random

def convert_eye_diseases_to_new_format():
    """Chuy·ªÉn ƒë·ªïi t·∫•t c·∫£ d·ªØ li·ªáu eye_diseases sang format m·ªõi"""
    print("üîÑ CHUY·ªÇN ƒê·ªîI D·ªÆ LI·ªÜU SANG FORMAT M·ªöI...")
    
    conn = sqlite3.connect('students.db')
    cursor = conn.cursor()
    
    # L·∫•y t·∫•t c·∫£ students
    cursor.execute('SELECT id, email, eye_diseases FROM students')
    all_students = cursor.fetchall()
    
    # Mapping old conditions to new format
    condition_mapping = {
        'C·∫≠n th·ªã': 'C·∫≠n th·ªã',
        'Vi·ªÖn th·ªã': 'Vi·ªÖn th·ªã', 
        'Lo·∫°n th·ªã': 'Lo·∫°n th·ªã',
        'ƒê·ª•c th·ªßy tinh th·ªÉ': 'Kh√°c: ƒê·ª•c th·ªßy tinh th·ªÉ',
        'Tho√°i h√≥a ƒëi·ªÉm': 'Kh√°c: Tho√°i h√≥a ƒëi·ªÉm',
        'B·ªánh kh√¥ m·∫Øt': 'Kh√°c: Kh√¥ m·∫Øt',
        'B·ªánh l√°c': 'L√°c m·∫Øt',
        'B·ªánh kh√°c v·ªÅ m·∫Øt': 'Kh√°c',
        'Kh√¥ng c√≥': 'B√¨nh th∆∞·ªùng',
        'Kh√¥ng c√≥ b·ªánh v·ªÅ m·∫Øt': 'B√¨nh th∆∞·ªùng',
        'B√¨nh th∆∞·ªùng': 'B√¨nh th∆∞·ªùng',
        'Ch∆∞a c√≥ th√¥ng tin': 'B√¨nh th∆∞·ªùng'
    }
    
    updated_count = 0
    
    for student_id, email, current_eye_data in all_students:
        new_conditions = []
        
        if current_eye_data and current_eye_data.strip():
            # Split multiple conditions
            conditions = [c.strip() for c in current_eye_data.split(',')]
            
            for condition in conditions:
                if condition in condition_mapping:
                    mapped = condition_mapping[condition]
                    if mapped not in new_conditions:  # Avoid duplicates
                        new_conditions.append(mapped)
                else:
                    # If unknown condition, add as "Kh√°c: condition"
                    new_conditions.append(f"Kh√°c: {condition}")
        
        # If no conditions, set as "B√¨nh th∆∞·ªùng"
        if not new_conditions:
            new_conditions = ['B√¨nh th∆∞·ªùng']
        
        # Join conditions with comma and space
        new_eye_data = ', '.join(new_conditions)
        
        # Update database
        cursor.execute('UPDATE students SET eye_diseases = ? WHERE id = ?', (new_eye_data, student_id))
        
        if current_eye_data != new_eye_data:
            print(f"Updated {email}: '{current_eye_data}' ‚Üí '{new_eye_data}'")
            updated_count += 1
    
    conn.commit()
    conn.close()
    
    print(f"‚úÖ ƒê√£ c·∫≠p nh·∫≠t {updated_count} records v·ªõi format m·ªõi")
    return updated_count

def verify_new_format():
    """Ki·ªÉm tra format m·ªõi"""
    print("\nüìä KI·ªÇM TRA FORMAT M·ªöI...")
    
    conn = sqlite3.connect('students.db')
    cursor = conn.cursor()
    
    # Count different condition types
    cursor.execute('SELECT eye_diseases, COUNT(*) FROM students GROUP BY eye_diseases ORDER BY COUNT(*) DESC')
    conditions = cursor.fetchall()
    
    print(f"C√°c t√¨nh tr·∫°ng m·∫Øt hi·ªán t·∫°i ({len(conditions)} lo·∫°i):")
    for condition, count in conditions:
        print(f"  {condition}: {count} h·ªçc sinh")
    
    # Show some samples
    cursor.execute('SELECT email, eye_diseases FROM students LIMIT 10')
    samples = cursor.fetchall()
    
    print(f"\nM·∫´u d·ªØ li·ªáu (10 records ƒë·∫ßu):")
    for email, eye_data in samples:
        print(f"  {email}: {eye_data}")
    
    conn.close()

if __name__ == "__main__":
    print("="*60)
    print("CHUY·ªÇN ƒê·ªîI D·ªÆ LI·ªÜU T√åNH TR·∫†NG M·∫ÆT SANG FORMAT M·ªöI")
    print("="*60)
    
    # B∆∞·ªõc 1: Chuy·ªÉn ƒë·ªïi d·ªØ li·ªáu
    convert_eye_diseases_to_new_format()
    
    # B∆∞·ªõc 2: Ki·ªÉm tra k·∫øt qu·∫£
    verify_new_format()
    
    print("\n" + "="*60)
    print("‚úÖ HO√ÄN TH√ÄNH CHUY·ªÇN ƒê·ªîI!")
    print("Format m·ªõi:")
    print("- B√¨nh th∆∞·ªùng: Kh√¥ng c√≥ v·∫•n ƒë·ªÅ v·ªÅ m·∫Øt")
    print("- C·∫≠n th·ªã, Vi·ªÖn th·ªã, Lo·∫°n th·ªã, L√°c m·∫Øt, M√π m√†u")
    print("- Kh√°c: [m√¥ t·∫£ chi ti·∫øt]")
    print("- C√≥ th·ªÉ k·∫øt h·ª£p nhi·ªÅu t√¨nh tr·∫°ng: 'C·∫≠n th·ªã, Lo·∫°n th·ªã'")
    print("="*60)
